[user]
  name = ajduke
  email = ajduke@about.me
[github]
	user = ajduke

[commit]
  template = ~/dotfiles/git/gitmessage

[core]
  excludesfile = ~/dotfiles/git/gitignore
  pager = diff-so-fancy | less --tabs=2 -RFX

[color]
    branch = auto
    diff = auto
    status = auto
  [color "branch"]
    current = blue reverse
    local = blue
    remote = green
  [color "diff"]
    meta = blue bold
    frag = magenta bold
    old = red bold
    new = green bold
  [color "status"]
    added = blue
    changed = green
    untracked = cyan


#[diff]
#   external = /usr/local/bin/git-diff.sh

[merge]
  log = true

[alias]
    ci = commit -m
    cia = commit -am
    cim = commit --amend -m

    co = checkout
    nb = checkout -b

    g = grep -I
    lg = log -p

    st = status
    br = branch
    sh = show

    undo = reset --soft HEAD^
    prune = fetch --prune
    stash-all = stash save -u
    sts = stash save
    stl = stash list

    d = diff
    dc = diff --cached
    dw = diff --word-diff
    last-commit = diff HEAD^
    staged = diff --cached
    unstaged = diff
    both = diff HEAD
    dh = diff HEAD

    unstage = reset HEAD
    undoc = reset --soft HEAD^

    pl = pull
    ps = push

    r =  remote -v
    ra =  remote add
    ru = remote set-url --add

    # Rebase the current branch on its upstream
  	rebase-upstream = rebase -i @{u}
  	ru = rebase-upstream

    mywork = log --all --oneline --no-merges --author=ajduke@about.me
    today = log --since=00:00:00 --all --no-merges --oneline --author=ajduke@about.me

    brw= for-each-ref --count=10 --sort=-committerdate refs/heads/ --format="%(refname:short)"
    slog = shortlog -sn --al --no-merges
    # quick access to oneline log format
    oneline = log --date=relative --pretty=format:'%Cred%h %Cblue%ar %Creset%s %Cred%an'
    ol = log --date=relative --pretty=format:'%Cred%h %Cblue%ar %Creset%s %Cred%an'
    graph = log --graph --pretty=oneline --abbrev-commit
    ls = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --abbrev-commit --date=relative
    ll = log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)[%an]%Creset' --decorate --numstat
    ld = log --pretty=format:'%C(red)%h %Cgreen%ad%C(yellow)%d %Creset%s%C(bold blue) [%cn]%Creset' --decorate --date=short

    last = "!f(){ if [ $# -gt 0 ]; then since="$1"; shift; else since="week"; fi; git lg --since=\"last $since\" "$@"; }; f"
    recent = "!f(){ git for-each-ref --sort=committerdate refs/heads/ --format='%(color:yellow)%(HEAD) %(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:reset)%(objectname:short) %(upstream:trackshort) %(subject) <%(color:blue)%(authorname)>%(color:reset)' \"$@\" | column -ts'|'; }; f"

    # For each submodule
  	subs = submodule foreach --recursive
    # Update submodules
    update-subs = submodule foreach --recursive "git fetch && git checkout `git remote-ref`"
    parent = "!git show-branch | grep '*' | grep -v \"$(git rev-parse --abbrev-ref HEAD)\" | head -n1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//' #"